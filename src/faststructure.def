Bootstrap: docker
From: python:2.7.18

%help
    This container provides an environment for running fastStructure (github.com/rajanil/fastStructure), a variational Bayesian framework for inferring population structure from large SNP genotype data.
    
    ## Installation:
    - Build the container using:
        ```
        apptainer build faststructure.sif faststructure.def
        ```
    - Run the container with:
        ```
        apptainer run faststructure.sif structure -K 3 --input=test/testdata --output=testoutput_simple --full --seed=100
        ```

    ## Usage:
    - Run structure analysis:
        ```
        structure -K 3 --input=<input_file> --output=<output_prefix> [options]
        ```
    - Choose the best `K`:
        ```
        chooseK --input=<output_prefix>
        ```
    - Visualize results:
        ```
        distruct -K <K> --input=<output_prefix>
        ```
        ```
        plot_marginal_likelihood -K <K> --input=<output_prefix>
        ```
    ## Notes:
    - The container installs fastStructure into `/usr/local/src/fastStructure`
    - A wrapper script `structure`, `chooseK`, and `distruct` are provided for easier execution.
    - Added a function to plot marginal likelihood with `plot_marginal_likelihood` command.

%post
    # Update and install dependencies
    apt-get update && apt-get install -y \
        build-essential \
        wget \
        libgsl0-dev \
        libgsl-dev \
        python2.7-dev \
        git 

    # Install Python packages
    pip2.7 install numpy scipy "cython<3" matplotlib
    
    # Set environment for installation
    install_dir=/usr/local/src/fastStructure
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${install_dir}/lib
    export CFLAGS="-I${install_dir}/include"
    export LDFLAGS="-L${install_dir}/lib"

    # Create executables

    # Debug: Print the value of install_dir to verify it
    echo "Installation directory is: $install_dir"

    # Loop through each script name
    for script in structure chooseK distruct plot_marginal_likelihood; do
        # Define the output file
        output_file="/usr/local/bin/${script}"

        # Create the script content
        echo '#!/bin/sh' > "$output_file"

        # Special handling for distruct (include MPLBACKEND export)
        if [ "$script" = "distruct" ] || [ "$script" = "plot_marginal_likelihood" ]; then
            echo 'export MPLBACKEND=Agg' >> "$output_file"
        fi

        # Add the Python command
        echo "python2.7 \"${install_dir}/${script}.py\" \"\$@\"" >> "$output_file"

        # Make the script executable
        chmod +x "$output_file"

    done

    # Clone and build fastStructure
    git clone https://github.com/rajanil/fastStructure.git "${install_dir}"  # Clone directly into the correct location
    cd "${install_dir}/vars"
    python2.7 setup.py build_ext --inplace
    cd "${install_dir}"
    python2.7 setup.py build_ext --inplace
    wget https://raw.githubusercontent.com/ignaciojci/variant-calling-pipeline/refs/heads/main/src/plot_marginal_likelihood.py


%environment
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/src/fastStructure/lib
    export PATH=/usr/bin:$PATH
    export PATH=/usr/local/bin:$PATH
    export PYTHONPATH=/usr/local/src/fastStructure/vars:$PYTHONPATH
    export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH

%test
    echo "Testing fastStructure container..."

    # Define paths
    install_dir="/usr/local/src/fastStructure"
    outdir="/tmp/test_results"  # Use /tmp for writable storage
    input_file="${install_dir}/test/testdata"
    output_prefix="testoutput"

    mkdir -p "$outdir"

    # Run fastStructure for K = 2 to 7
    for K in `seq 2 7`; do
        echo "Running fastStructure for K=$K..."
        structure -K "$K" --input="$input_file" --output="${outdir}/${output_prefix}_K" --full --seed=100
    done

    # Run chooseK
    echo "Running chooseK..."
    chooseK --input="${outdir}/${output_prefix}_K" > "${outdir}/chooseK_output.txt"
    cat "${outdir}/chooseK_output.txt"

    # Extract optimal K based on the first reported value
    optimal_K=$(awk -F' = ' '/Model complexity that maximizes marginal likelihood/ {print $2}' "${outdir}/chooseK_output.txt")
    optimal_K2=$(awk -F' = ' '/Model components used to explain structure in data/ {print $2}' "${outdir}/chooseK_output.txt")

    # Run distruct for the best K
    echo "Running distruct for K=$optimal_K..."
    distruct -K "$optimal_K" --input="${outdir}/${output_prefix}_K" --output="${outdir}/${output_prefix}_K.${optimal_K}.svg"
    distruct -K "$optimal_K2" --input="${outdir}/${output_prefix}_K" --output="${outdir}/${output_prefix}_K.${optimal_K2}.svg"
    
    # Plot marginal likelihood
    echo "Plotting marginal likelihood over K..."
    plot_marginal_likelihood --input="${outdir}/${output_prefix}_K" --output="${outdir}/${output_prefix}_K_likelihood.png"

    echo "Container test completed successfully!"

%runscript
    exec "$@"
