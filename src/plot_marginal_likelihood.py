import argparse
import os
import matplotlib.pyplot as plt

def extract_marginal_likelihood(log_file):
    """Extract the final marginal likelihood from a fastStructure log file."""
    with open(log_file, 'r') as f:
        for line in f:
            if line.startswith("Marginal Likelihood ="):
                return float(line.split('=')[-1].strip())
    return None

def plot_marginal_likelihood(input_prefix, output_file):
    """Generate a plot of marginal likelihood vs. K based on fastStructure log files."""
    K_values = []
    marginal_likelihoods = []

    # Scan for log files corresponding to different values of K
    for K in range(1, 11):  # Assuming K ranges from 1 to 10
        log_file = f"{input_prefix}.{K}.log"
        if os.path.exists(log_file):
            likelihood = extract_marginal_likelihood(log_file)
            if likelihood is not None:
                K_values.append(K)
                marginal_likelihoods.append(likelihood)
    
    if not K_values:
        print("No valid log files found. Check input prefix.")
        return

    # Plot results
    plt.figure(figsize=(8, 5))
    plt.plot(K_values, marginal_likelihoods, marker='o', linestyle='-')
    plt.xlabel("K (Number of Clusters)")
    plt.ylabel("Marginal Likelihood")
    plt.title("Marginal Likelihood vs. K in fastStructure")
    plt.grid(True)
    plt.savefig(output_file)
    print(f"Plot saved to {output_file}")

def print_help():
    """Print detailed instructions on how to run the script."""
    help_text = """
    Usage: python plot_marginal_likelihood.py --input=<output_prefix> --output=<image_file>

    Description:
    This script reads fastStructure log files and plots the marginal likelihood as a function of K.

    Parameters:
    --input  : The prefix of the output log files generated by fastStructure.
               Example: If your log files are named "testoutput_simple.1.log", "testoutput_simple.2.log", etc.,
               then use --input=testoutput_simple.
    
    --output : The filename for the output plot (e.g., output.png).
    
    Example Usage:
    python plot_marginal_likelihood.py --input=testoutput_simple --output=marginal_likelihood_plot.png

    Notes:
    - Ensure that the log files are present in the same directory where you are running this script.
    - The script will check for log files from K=1 to K=10.
    - The resulting plot will be saved in the specified output file.

    """
    print(help_text)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Plot marginal likelihood vs. K from fastStructure logs.", add_help=False)
    parser.add_argument("--input", required=False, help="Prefix of output logs from fastStructure")
    parser.add_argument("--output", required=False, help="Filename to save the plot (e.g., output.png)")
    parser.add_argument("--help", action="store_true", help="Display help message and usage instructions")

    args = parser.parse_args()

    if args.help or not args.input or not args.output:
        print_help()
    else:
        plot_marginal_likelihood(args.input, args.output)
